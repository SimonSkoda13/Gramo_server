import { FieldsBuildInput, FiltersBuildInput, PaginationBuildInput, RelationsBuildInput, SortBuildInput } from "../../parameter";
import { ParameterFieldsType, ParameterFiltersType, ParameterPaginationType, ParameterRelationsType, ParameterSortType, ParameterType, URLParameterFieldsType, URLParameterFiltersType, URLParameterPaginationType, URLParameterRelationsType, URLParameterSortType, URLParameterType } from "../../type";
export declare type BuildParameterInput<T extends ParameterType | URLParameterType, R extends Record<string, any>> = T extends ParameterFieldsType | URLParameterFieldsType ? FieldsBuildInput<R> : T extends ParameterFiltersType | URLParameterFiltersType ? FiltersBuildInput<R> : T extends ParameterRelationsType | URLParameterRelationsType ? RelationsBuildInput<R> : T extends ParameterPaginationType | URLParameterPaginationType ? PaginationBuildInput<R> : T extends ParameterSortType | URLParameterSortType ? SortBuildInput<R> : T;
//# sourceMappingURL=type.d.ts.map